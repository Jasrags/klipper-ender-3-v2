# Support for a display attached to the micro-controller.
# [display]
# lcd_type: st7920
#   The type of LCD chip in use. This may be "hd44780" (which is used
#   in "RepRapDiscount 2004 Smart Controller" type displays), "st7920"
#   (which is used in "RepRapDiscount 12864 Full Graphic Smart
#   Controller" type displays), "uc1701" (which is used in "MKS Mini
#   12864" type displays), "ssd1306", or "sh1106". This parameter must
#   be provided.
#rs_pin:
#e_pin:
#d4_pin:
#d5_pin:
#d6_pin:
#d7_pin:
#   The pins connected to an hd44780 type lcd. These parameters must
#   be provided when using an hd44780 display.
# cs_pin: EXP1_7
# sclk_pin: EXP1_6
# sid_pin: EXP1_8
#   The pins connected to an st7920 type lcd. These parameters must be
#   provided when using an st7920 display.
#cs_pin:
#a0_pin:
#rst_pin:
#   The pins connected to an uc1701 type lcd. The rst_pin is
#   optional. The cs_pin and a0_pin parameters must be provided when
#   using an uc1701 display.
#contrast: 40
#   The contrast to set when using a uc1701 or SSD1306/SH1106 type
#   display For UC1701 the value may range from 0 to 63. Default is
#   40. For SSD1306/SH1106 the value may range from 0 to 256. Default
#   is 239.
#vcomh: 0
#   Set the Vcomh value on SSD1306/SH1106 displays. This value is
#   associated with a "smearing" effect on some OLED displays. The
#   value may range from 0 to 63. Default is 0.
#x_offset: 0
#   Set the horizontal offset value on SSD1306/SH1106 displays.
#   Default is 0.
#invert: FALSE
#   TRUE inverts the pixels on certain OLED (SSD1306/SH1106) displays.
#   The default is FALSE.
#cs_pin:
#dc_pin:
#spi_bus:
#spi_speed:
#spi_software_sclk_pin:
#spi_software_mosi_pin:
#spi_software_miso_pin:
#   The pins connected to an ssd1306 type lcd when in "4-wire" spi
#   mode. The parameters that start with "spi_" are optional and they
#   control the spi settings used to communicate with the chip. The
#   default is to use i2c mode for ssd1306 displays.
#reset_pin:
#   A reset pin may be specified on ssd1306 displays. If it is not
#   specified then the hardware must have a pull-up on the
#   corresponding lcd line.
#display_group:
#   The name of the display_data group to show on the display. This
#   controls the content of the screen (see the description of
#   [display_data] below for more information). The default is
#   _default_20x4 for hd44780 displays and _default_16x4 for other
#   displays.
#menu_timeout:
#   Timeout for menu. Being inactive this amount of seconds will
#   trigger menu exit or return to root menu when having autorun
#   enabled. The default is 0 seconds (disabled)
#menu_root:
#   Name of the main menu section to show when clicking the encoder
#   on the home screen. The defaults is __main, and this shows the
#   the default menus as defined in klippy/extras/display/menu.cfg
#menu_reverse_navigation:
#   When enabled it will reverse up and down directions for list
#   navigation. The default is False. This parameter is optional.
# encoder_pins: ^PB14, ^PB15
#   The pins connected to encoder. 2 pins must be provided when using
#   encoder. This parameter must be provided when using menu.
# click_pin: ^!PB12
#   The pin connected to 'enter' button or encoder 'click'. This
#   parameter must be provided when using menu. The presence of an
#   'analog_range_click_pin' config parameter turns this parameter
#   from digital to analog.
#back_pin:
#   The pin connected to 'back' button. This parameter is optional,
#   menu can be used without it. The presence of an
#   'analog_range_back_pin' config parameter turns this parameter from
#   digital to analog.
#up_pin:
#   The pin connected to 'up' button. This parameter must be provided
#   when using menu without encoder. The presence of an
#   'analog_range_up_pin' config parameter turns this parameter from
#   digital to analog.
#down_pin:
#   The pin connected to 'down' button. This parameter must be
#   provided when using menu without encoder. The presence of an
#   'analog_range_down_pin' config parameter turns this parameter from
#   digital to analog.
#kill_pin:
#   The pin connected to 'kill' button. This button will call
#   emergency stop. The presence of an 'analog_range_kill_pin' config
#   parameter turns this parameter from digital to analog.
#analog_pullup_resistor: 4700
#   The resistance (in ohms) of the pullup attached to the analog
#   button. The default is 4700 ohms.
#analog_range_click_pin:
#   The resistance range for a 'enter' button. Range minimum and
#   maximum comma-separated values must be provided when using analog
#   button.
#analog_range_back_pin:
#   The resistance range for a 'back' button. Range minimum and
#   maximum comma-separated values must be provided when using analog
#   button.
#analog_range_up_pin:
#   The resistance range for a 'up' button. Range minimum and maximum
#   comma-separated values must be provided when using analog button.
#analog_range_down_pin:
#   The resistance range for a 'down' button. Range minimum and
#   maximum comma-separated values must be provided when using analog
#   button.
#analog_range_kill_pin:
#   The resistance range for a 'kill' button. Range minimum and
#   maximum comma-separated values must be provided when using analog
#   button.

# Support for displaying custom data on an lcd screen. One may create
# any number of display groups and any number of data items under
# those groups. The display will show all the data items for a given
# group if the display_group option in the [display] section is set to
# the given group name.
#[display_data my_group_name my_data_name]
#position: 0, 0
#   Comma separated row and column of the display position that should
#   be used to display the information. This parameter must be
#   provided.
#text:
#   The text to show at the given position. This field is evaluated
#   using command templates (see docs/Command_Templates.md). This
#   parameter must be provided.

# Display data text "macros" (one may define any number of sections
# with a display_template prefix). This feature allows one to reduce
# repetitive definitions in display_data sections. One may use the
# builtin render() function in display_data sections to evaluate a
# template. For example, if one were to define [display_template
# my_template] then one could use "{ render('my_template') }" in a
# display_data section.
#[display_template my_template_name]
#param_<name>:
#   One may specify any number of options with a "param_" prefix. The
#   given name will be assigned the given value (parsed as a Python
#   literal) and will be available during macro expansion. If the
#   parameter is passed in the call to render() then that value will
#   be used during macro expansion. For example, a config with
#   "param_speed = 75" might have a caller with
#   "render('my_template_name', param_speed=80)". Parameter names may
#   not use upper case characters.
#text:
#   The text to return when the render() function is called for this
#   template. This field is evaluated using command templates (see
#   docs/Command_Templates.md). This parameter must be provided.

# Display a custom glyph on displays that support it. The given name
# will be assigned the given display data which can then be referenced
# in the display templates by their name surrounded by two "tilde"
# symbols i.e. ~my_display_glyph~
#[display_glyph my_display_glyph]
#data:
#   The display data, stored as 16 lines consisting of 16 bits (1 per
#   pixel) where '.' is a blank pixel and '*' is an on pixel (e.g.,
#   "****************" to display a solid horizontal line).
#   Alternatively, one can use '0' for a blank pixel and '1' for an on
#   pixel. Put each display line into a separate config line. The
#   glyph must consist of exactly 16 lines with 16 bits each. This
#   parameter is optional.
#hd44780_data:
#   Glyph to use on 20x4 hd44780 displays. The glyph must consist of
#   exactly 8 lines with 5 bits each. This parameter is optional.
#hd44780_slot:
#   The hd44780 hardware index (0..7) to store the glyph at. If
#   multiple distinct images use the same slot then make sure to only
#   use one of those images in any given screen. This parameter is
#   required if hd44780_data is specified.

# [output_pin beeper]
# pin: PB13